* Why are we creating index.js where we gather all the styles and the components
  itself if we only use the component? In 'Home' we reconstructure only the component
  from the index.js.

* Why are we doing: someFunc = () => {}
  Instead of:       someFunc() {}
  Why the use of the annonymous function?
  What's the difference between:
            onPress={this.handleThemePress(styles.$blue)} 
      to:
            onPress={() => this.handleThemePress(styles.$blue)}

      ANSWER:
            The first one invokes the function immediately.
            The second doesn't.

* When should I use $ before a variable?
  like why did I have to put $ before "underlayColor"?
  Only "$underlayColor" worked, "underlayColor" didn't work.

* Why here:
      const fetchLatestConversionRates = function* (action) {
      try {
            let currency = action.currency;
            if (currency === undefined) {
                  currency = yield select(state => state.currencies.baseCurrency);
            }
            const response = yield getLatestRates(currency);
            // *** Why here in the result, I need to use yield?
                  The first yield of the getLatestRates(currency) returns a Promise,
                  so it understood why the function continue to run until the next yield,
                  but the function supposed to stop running in 'yield response.json()';
                  Because it doesn't return anything.
                  Yet when I don't write 'yield', result contains a Promise.

            const result = yield response.json();



/////// IMPORTANT NOTICES ///////

* We can't access global variables directly from the components.
  So for example if we want to access some global variable of CSS
  we create EStylesheet and then access it through the stylesheet, like:
      const styles = EStyleSheet.create({
      $blue: '$primaryBlue',
      });